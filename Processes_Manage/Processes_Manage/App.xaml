<Application x:Class="Processes_Manage.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="PresentationOptions"
             StartupUri="MainWindow.xaml">
    <!--"MainWindow.xaml 6设置/SetWindow.xaml"-->
    <Application.Resources>
        <!--MainWindow界面-->
        <LinearGradientBrush x:Key="shinyBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#3d3d3d" Offset="0" />
            <GradientStop Color="#383838" Offset="0.2" />
            <GradientStop Color="#2b2b2b" Offset="0.4"/>
            <GradientStop Color="#1a1a1a" Offset="0.6"/>
            <GradientStop Color="#0f0f0f" Offset="1"/>
        </LinearGradientBrush>
        
        <DrawingBrush x:Key="MyGridBrushResource" 
      PresentationOptions:Freeze="True" 
      Viewport="0,0,10,10" 
      ViewportUnits="Absolute" TileMode="Tile">
            <DrawingBrush.Drawing>
                <DrawingGroup>
                    <DrawingGroup.Children>
                        <GeometryDrawing Brush="White">
                            <GeometryDrawing.Geometry>
                                <RectangleGeometry Rect="0,0,1,1" />
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                        <GeometryDrawing Geometry="M0,0 L1,0 1,0.1, 0,0.1Z" Brush="#CCCCFF" />
                        <GeometryDrawing Geometry="M0,0 L0,1 0.1,1, 0.1,0Z" Brush="#CCCCFF" />
                    </DrawingGroup.Children>
                </DrawingGroup>
            </DrawingBrush.Drawing>
        </DrawingBrush>

        <DrawingBrush x:Key="BlackBackgroundGridBrushResource" 
     PresentationOptions:Freeze="True" 
     Viewport="0,0,10,10" 
     ViewportUnits="Absolute" TileMode="Tile">
            <DrawingBrush.Drawing>
                <DrawingGroup>
                    <DrawingGroup.Children>
                        <GeometryDrawing Brush="Black">
                            <GeometryDrawing.Geometry>
                                <RectangleGeometry Rect="0,0,1,1" />
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                        <GeometryDrawing Geometry="M0,0 L1,0 1,0.1, 0,0.1Z" Brush="#CCCCFF" />
                        <GeometryDrawing Geometry="M0,0 L0,1 0.1,1, 0.1,0Z" Brush="#CCCCFF" />
                    </DrawingGroup.Children>
                </DrawingGroup>
            </DrawingBrush.Drawing>
        </DrawingBrush>

        <DrawingBrush x:Key="MyBlueGridBrushResource" 
      PresentationOptions:Freeze="True" 
      Viewport="0,0,10,10" 
      ViewportUnits="Absolute" TileMode="Tile">
            <DrawingBrush.Drawing>
                <DrawingGroup>
                    <DrawingGroup.Children>
                        <GeometryDrawing Brush="Gray">
                            <GeometryDrawing.Geometry>
                                <RectangleGeometry Rect="0,0,1,1" />
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                        <GeometryDrawing Geometry="M0,0 L1,0 1,0.1, 0,0.1Z" Brush="#CCCCFF" />
                        <GeometryDrawing Geometry="M0,0 L0,1 0.1,1, 0.1,0Z" Brush="#CCCCFF" />
                    </DrawingGroup.Children>
                </DrawingGroup>
            </DrawingBrush.Drawing>
        </DrawingBrush>

        <GradientStopCollection x:Key="MyGlassGradientStopsResource"
      PresentationOptions:Freeze="True" >
            <GradientStop Color="WhiteSmoke" Offset="0.2" />
            <GradientStop Color="Transparent" Offset="0.4" />
            <GradientStop Color="WhiteSmoke" Offset="0.5" />
            <GradientStop Color="Transparent" Offset="0.75" />
            <GradientStop Color="WhiteSmoke" Offset="0.9" />
            <GradientStop Color="Transparent" Offset="1" />
        </GradientStopCollection>

        <LinearGradientBrush x:Key="MyGlassBrushResource" 
      StartPoint="0,0" EndPoint="1,1" Opacity="0.75" 
      GradientStops="{StaticResource MyGlassGradientStopsResource}"
      PresentationOptions:Freeze="True"  />

        <!--RadioButton-->
        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="Background" Value="White" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid Width="{TemplateBinding Width}" 
              Height="{TemplateBinding Height}">

                            <Rectangle x:Name="outerRectangle" HorizontalAlignment="Stretch" 
                VerticalAlignment="Stretch" Stroke="{TemplateBinding Background}" 
                  RadiusX="20" RadiusY="20" StrokeThickness="5" Fill="Transparent" />

                            <Rectangle x:Name="innerRectangle" HorizontalAlignment="Stretch" 
                VerticalAlignment="Stretch" Stroke="Transparent" StrokeThickness="20" 
                Fill="White" RadiusX="20" RadiusY="20" />

                            <Rectangle x:Name="glassCube" HorizontalAlignment="Stretch" 
                VerticalAlignment="Stretch"
                StrokeThickness="2" RadiusX="10" RadiusY="10" Opacity="0" 
                Fill="{StaticResource MyGlassBrushResource}"
                RenderTransformOrigin="0.5,0.5">
                                <Rectangle.Stroke>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0.0" Color="LightBlue" />
                                            <GradientStop Offset="1.0" Color="Gray" />
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Rectangle.Stroke>
                                <Rectangle.RenderTransform>
                                    <ScaleTransform x:Name="glassCubeScaleTransform" />
                                </Rectangle.RenderTransform>
                                <Rectangle.BitmapEffect>
                                    <BevelBitmapEffect />
                                </Rectangle.BitmapEffect>
                            </Rectangle>
                            <DockPanel>
                                <ContentPresenter x:Name="myContentPresenter" Margin="15" HorizontalAlignment="Center" TextBlock.FontSize="16"
                  Content="{TemplateBinding  Content}" TextBlock.Foreground="Black" TextBlock.FontWeight="Bold"/>
                            </DockPanel>
                        </Grid>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsFocused" Value="true">
                                <Setter Property="Rectangle.Opacity" Value="1" TargetName="glassCube" />
                                <Setter Property="Rectangle.Opacity" Value="1" TargetName="innerRectangle" />
                            </Trigger>

                            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                <EventTrigger.Actions>
                                    <BeginStoryboard Name="mouseEnterBeginStoryboard">
                                        <Storyboard>
                                            <DoubleAnimation
                        Storyboard.TargetName="glassCubeScaleTransform"
                        Storyboard.TargetProperty="ScaleX"
                        From="1" To="0.9" Duration="0:0:0.5" />
                                            <DoubleAnimation
                        Storyboard.TargetName="glassCubeScaleTransform"
                        Storyboard.TargetProperty="ScaleY"
                        From="1" To="0.9" Duration="0:0:0.5" />

                                            <DoubleAnimation 
                        Storyboard.TargetName="outerRectangle"
                        Storyboard.TargetProperty="RadiusX"
                        From="20" To="0" Duration="0:0:0.5" />

                                            <DoubleAnimation 
                        Storyboard.TargetName="outerRectangle"
                        Storyboard.TargetProperty="RadiusY"
                        From="20" To="0" Duration="0:0:0.5" />

                                            <DoubleAnimation
                        Storyboard.TargetName="glassCube"
                        Storyboard.TargetProperty="Opacity"
                        From="0" To="1" Duration="0:0:0.1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation 
                        Storyboard.TargetName="outerRectangle"
                        Storyboard.TargetProperty="RadiusX"
                        From="0" To="20" Duration="0:0:0.5" />

                                            <DoubleAnimation 
                        Storyboard.TargetName="outerRectangle"
                        Storyboard.TargetProperty="RadiusY"
                        From="0" To="20" Duration="0:0:0.5" />

                                            <DoubleAnimation
                       Storyboard.TargetName="glassCube"
                       Storyboard.TargetProperty="Opacity"
                       From="1" To="0" Duration="0:0:0.1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="RadioButton.Checked">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                        Storyboard.TargetName="glassCubeScaleTransform"
                        Storyboard.TargetProperty="ScaleX"
                        To="0.1" Duration="0:0:0.1" AutoReverse="True" />
                                            <DoubleAnimation
                        Storyboard.TargetName="glassCubeScaleTransform"
                        Storyboard.TargetProperty="ScaleY"
                        To="0.1" Duration="0:0:0.1" AutoReverse="True" />
                                            <DoubleAnimation
                        Storyboard.TargetName="innerRectangle"
                        Storyboard.TargetProperty="Opacity"
                        To="0" Duration="0:0:0.5" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="RadioButton.Unchecked">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                        Storyboard.TargetName="innerRectangle"
                        Storyboard.TargetProperty="Opacity"
                        To="1.0" Duration="0:0:0.5" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--MainWindow界面-->
        
        <!--按钮特效1-->
        <Style x:Key="EllipseButton" TargetType="Button">
            <Setter Property="Height" Value="100"/>
            <Setter Property="Width" Value="100" />
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate  TargetType="Button">
                        <Grid>
                            <Ellipse Name="EllipseButtonBackground"  StrokeThickness="3">
                                <Ellipse.Stroke>
                                    <LinearGradientBrush StartPoint="0.0,0" EndPoint="0.0,1">
                                        <GradientStop Offset="0" Color=" SlateGray" ></GradientStop>
                                        <GradientStop Offset="1.0" Color="DarkKhaki" ></GradientStop>
                                    </LinearGradientBrush>
                                </Ellipse.Stroke>
                                <Ellipse.Fill>
                                    <LinearGradientBrush StartPoint="0.0,0" EndPoint="0.0,1">
                                        <GradientStop Offset="0" Color="#ccffff" ></GradientStop>
                                        <GradientStop Offset="1.0" Color="Black" ></GradientStop>
                                    </LinearGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>

                            <Ellipse Margin="15,5,15,50"  >
                                <Ellipse.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1"  >
                                        <GradientStop Offset="0" Color="#ffffff" ></GradientStop>
                                        <GradientStop Offset="1" Color="Transparent"></GradientStop>
                                    </LinearGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                            <ContentPresenter Name="EllipseButtonContent" Content="{TemplateBinding Content}" 
VerticalAlignment="Center" HorizontalAlignment="Center"></ContentPresenter>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Ellipse.Fill" TargetName="EllipseButtonBackground">
                                    <Setter.Value>
                                        <RadialGradientBrush RadiusX="0.5" RadiusY="0.5" Center="0.5,0.5">
                                            <GradientStop Offset="0" Color="Orange"></GradientStop>
                                            <GradientStop Offset="1" Color="Purple"></GradientStop>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Ellipse.Fill" TargetName="EllipseButtonBackground">
                                    <Setter.Value>
                                        <RadialGradientBrush RadiusX="0.5" RadiusY="0.5" Center="0.5,0.5">
                                            <GradientStop Offset="0" Color="Orange"></GradientStop>
                                            <GradientStop Offset="1" Color="Green"></GradientStop>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--按钮特效1-->
        
        <!--按钮特效2-->
        <!--渐变画笔实现玻璃效果-->
        <LinearGradientBrush x:Key="MyGlassBrushButtonResource" 
    StartPoint="0,0" EndPoint="1,1" Opacity="0.75" 
    GradientStops="{StaticResource MyGlassGradientStopsResource}" />

        <!--按钮背景颜色-->
        <LinearGradientBrush x:Key="GrayBlueGradientBrush" 
    StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="Gray" Offset="0" />
            <GradientStop Color="LightGray" Offset="0.3"/>
            <GradientStop Color="Gray" Offset="0.5" />
            <GradientStop Color="LightGray" Offset="0.6"/>
            <GradientStop Color="Gray" Offset="1" />
        </LinearGradientBrush>

        <!--按钮效果添加-->
        <Style x:Key="RectangleButton" TargetType="{x:Type Button}">
            <!--添加按钮背景色-->
            <Setter Property="Background" Value="{StaticResource GrayBlueGradientBrush}" />
            <Setter Property="Width" Value="130" />
            <Setter Property="Height" Value="60"/>
            <Setter Property="Margin" Value="10" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <!--在按钮上添加一个grid布局面板-->
                        <!--ClipToBounds如果内容应剪裁，则为 true，否则为 false。 默认值为 false。
-->
                        <Grid Width="{TemplateBinding Width}" 
    Height="{TemplateBinding Height}" >

                            <!-- 外边框 StrokeThickness轮廓的宽度 -->
                            <Rectangle x:Name="outerRectangle" HorizontalAlignment="Stretch" 
    VerticalAlignment="Stretch" Stroke="{TemplateBinding Background}" 
    RadiusX="5" RadiusY="5" StrokeThickness="5" Fill="Transparent" />

                            <!-- 内容框 -->
                            <Rectangle x:Name="innerRectangle" HorizontalAlignment="Stretch" 
    VerticalAlignment="Stretch" Stroke="Transparent" 
    StrokeThickness="15" 
    Fill="{TemplateBinding Background}" RadiusX="10" RadiusY="20" 
    />

                            <!-- 玻璃框 -->
                            <Rectangle x:Name="glassCube" HorizontalAlignment="Stretch"
    VerticalAlignment="Stretch"
    StrokeThickness="2" RadiusX="10" RadiusY="10" Opacity="0"
    Fill="{StaticResource MyGlassBrushButtonResource}"
    RenderTransformOrigin="0.5,0.5">
                                <Rectangle.Stroke>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0.0" Color="LightBlue" />
                                            <GradientStop Offset="1.0" Color="Gray" />
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Rectangle.Stroke>

                                <!-- 获取或设置影响此元素呈现位置的转换信息 -->
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <!--沿水平或垂直方向拉伸或收缩对象-->
                                        <ScaleTransform />
                                        <!--围绕点 CenterX 和 CenterY 将对象旋转指定的 Angle -->
                                        <RotateTransform />
                                    </TransformGroup>
                                </Rectangle.RenderTransform>

                            </Rectangle>

                            <!--DockPanel定义一个区域，从中可以相对于彼此水平或垂直排列子元素。 -->
                            <DockPanel Name="myContentPresenterDockPanel">
                                <!--ContentPresenter显示 ContentControl 的内容。-->
                                <ContentPresenter x:Name="myContentPresenter" Margin="20" HorizontalAlignment="Center"
                                  Content="{TemplateBinding  Content}" TextBlock.Foreground="Black" TextBlock.FontSize="12"/>
                            </DockPanel>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <!-- 设置鼠标悬停触发器 -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <!--外边框颜色-->
                                <Setter Property ="Rectangle.Stroke" TargetName="outerRectangle"
    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                <Setter Property="Rectangle.Opacity" Value="1"  TargetName="glassCube" />
                            </Trigger>

                            <!-- 鼠标离开按钮后 继续完成动画 -->
                            <Trigger Property="IsFocused" Value="true">
                                <Setter Property="Rectangle.Opacity" Value="1"       TargetName="glassCube" />
                                <Setter Property="Rectangle.Stroke" TargetName="outerRectangle"
      Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                <Setter Property="Rectangle.Opacity" Value="1" TargetName="glassCube" />
                            </Trigger>

                            <!--事件触发器-->
                            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                <EventTrigger.Actions>
                                    <BeginStoryboard Name="mouseEnterBeginStoryboard">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="glassCube" 
    Storyboard.TargetProperty=
    "(Rectangle.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
    By="-0.1" Duration="0:0:0.5" />
                                            <DoubleAnimation
    Storyboard.TargetName="glassCube" 
    Storyboard.TargetProperty=
    "(Rectangle.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" 
    By="-0.1" Duration="0:0:0.5" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                <EventTrigger.Actions>
                                    <StopStoryboard BeginStoryboardName="mouseEnterBeginStoryboard" />
                                </EventTrigger.Actions>
                            </EventTrigger>
                            <!--EventTrigger RoutedEvent="Button.Click">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="glassCube" 
    Storyboard.TargetProperty=
    "(Rectangle.RenderTransform).(TransformGroup.Children)[1].(RotateTransform.Angle)" 
    By="360" Duration="0:0:0.5" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--按钮特效2-->
        
        <!--带头标的区域特效-->
        <LinearGradientBrush x:Key="Brush_HeaderBackground" StartPoint="0.5,0" EndPoint="0.5,1">
            <GradientStop Color="#66000088" Offset="0" />
            <GradientStop Color="#BB000088" Offset="1" />
        </LinearGradientBrush>
        <Style TargetType="HeaderedContentControl">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="HeaderedContentControl">
                        <Border BorderBrush="Gray" 
                                BorderThickness="1"
                                CornerRadius="3"
                                Margin="5">
                            <DockPanel>
                                <Border Background="{StaticResource Brush_HeaderBackground}"
                                    CornerRadius="5"
                                    Margin="5"
                                    Padding="3"
                                    DockPanel.Dock="Top"
                                    >
                                    <TextBlock Text="{TemplateBinding Header}"
                                           Foreground="White" FontSize="16" FontWeight="Bold"/>
                                </Border>
                                <ContentPresenter />
                            </DockPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--带头标的区域特效-->

        <!--ListView供选择的CheckBox-->
        <DataTemplate x:Key="CheckBoxCell">
            <StackPanel Orientation="Horizontal">
                <CheckBox IsChecked="{Binding Path=IsSelected, 
          RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}}" IsHitTestVisible="False"/>
            </StackPanel>
        </DataTemplate>
    </Application.Resources>
</Application>
